@charset "UTF-8";body{margin:0;font:300 24px "Roboto",sans-serif;background:#161817}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;width:100%}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}.slick-loading .slick-list{background:#fff url(./ajax-loader.gif) center center no-repeat}@font-face{font-family:"slick";src:url(./fonts/slick.eot);src:url(./fonts/slick.eot?#iefix) format("embedded-opentype"),url(./fonts/slick.woff) format("woff"),url(./fonts/slick.ttf) format("truetype"),url(./fonts/slick.svg#slick) format("svg");font-weight:400;font-style:normal}.slick-next,.slick-prev{position:absolute;display:block;height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;background:0 0;color:transparent;top:50%;-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%);padding:0;border:0;outline:0}.slick-next:focus,.slick-next:hover,.slick-prev:focus,.slick-prev:hover{outline:0;background:0 0;color:transparent}.slick-dots li button:focus:before,.slick-dots li button:hover:before,.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{opacity:1}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next:before,.slick-prev:before{font:20px/1 "slick";color:#fff;opacity:.75;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-prev{left:-25px}[dir=rtl] .slick-prev{left:auto;right:-25px}.slick-prev:before{content:"←"}.slick-next:before,[dir=rtl] .slick-prev:before{content:"→"}.slick-next{right:-25px}[dir=rtl] .slick-next{left:-25px;right:auto}[dir=rtl] .slick-next:before{content:"←"}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{position:absolute;bottom:-25px;list-style:none;display:block;text-align:center;padding:0;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;height:20px;width:20px;margin:0 5px;padding:0;cursor:pointer}.slick-dots li button{border:0;background:0 0;display:block;height:20px;width:20px;outline:0;line-height:0;font-size:0;color:transparent;padding:5px;cursor:pointer}.slick-dots li button:focus,.slick-dots li button:hover{outline:0}.slick-dots li button:before{font:6px/20px "slick";position:absolute;top:0;left:0;content:"•";width:20px;height:20px;text-align:center;color:#000;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-dots li.slick-active button:before{color:#000;opacity:.75}*{-webkit-box-sizing:border-box;box-sizing:border-box}.container{margin:0 auto;padding:0 15px;max-width:1140px}@font-face{font-family:"Nizhegorodsky";src:url(../font/ST-Nizhegorodsky.woff2)}.header{background:#161817;min-height:106px}.header__nav{position:relative}.header__nav img{position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;width:178px;height:124px;z-index:99}.header__list{height:106px;margin:0;padding:0;list-style:none;display:grid;grid-template-columns:100px 1fr 1fr 100px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:100px}.header__item--right{text-align:end}.header__item a{font-style:normal;font-weight:300;font-size:24px;color:#e0e0e0;text-decoration:none}.slider{margin:0 auto;padding:0;max-width:1440px}.slider__wrap{position:relative}.slider__item{height:713px;width:100%}.slider__item img{height:713px}.slider__arrow{padding:0;margin:0;position:absolute;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);background:0 0;border:0}.slider__arrow-right{right:0}.slider__inner{width:644px;position:absolute;top:55%;right:15%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.slider__text,.slider__title{font:400 96px/106px "Nizhegorodsky";margin:0;padding:0;color:rgba(0,0,0,.81)}.slider__text{font:400 18px/20px "Nizhegorodsky";text-align:right}.slider__btn{font:400 36px "Nizhegorodsky";margin-top:20px;padding:17px 20px;border:0;background:#f24800;border-radius:9px;color:rgba(0,0,0,.81)}.slider__points{width:127px;position:absolute;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:5%;display:-webkit-box;display:-ms-flexbox;display:flex;gap:13px}.slider__point{display:block;background:#161817;border-radius:50%;width:13px;height:13px}.slider__point--active{background:#f24800}.btn{font:400 36px/40px "Nizhegorodsky";color:rgba(0,0,0,.81)}.about{padding-top:135px;padding-bottom:300px;background:url(../img/decor-bg1.png) top left no-repeat,url(../img/decot-bg2.png) bottom right no-repeat}.about__text{margin:57px auto 0;width:840px;font-style:normal;font-weight:300;font-size:24px;line-height:28px;color:#e0e0e0;text-align:justify}.title{font:400 96px/106px "Nizhegorodsky";margin:0;padding:0;text-transform:uppercase;text-align:center;color:#e0e0e0;display:-webkit-box;display:-ms-flexbox;display:flex;gap:75px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.title::after,.title::before{display:block;content:"";height:69px}.title::before{background:url(../img/fish-left.png);width:180.65px}.title::after{background:url(../img/fish-right.png);width:227.12px}@supports (-webkit-appearance:none){.slick-loading .slick-list{background:#fff url(./ajax-loader.gif) center center no-repeat}.about{background:url(../img/decor-bg1.webp) top left no-repeat,url(../img/decot-bg2.png) bottom right no-repeat}.title::before{background-image:url(../img/fish-left.webp)}.title::after{background-image:url(../img/fish-right.webp)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */